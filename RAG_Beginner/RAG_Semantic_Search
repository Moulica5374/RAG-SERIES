{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "gpuType": "T4"
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "accelerator": "GPU"
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fj27fo9ohpNx",
        "outputId": "d913455f-16a0-4475-f5da-ba292d059cf1"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ],
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Required Libraries"
      ],
      "metadata": {
        "id": "N7Bnspyx6YHT"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "%pip install -U langchain-community pymupdf langchain-google-genai chromadb\n",
        "\n"
      ],
      "metadata": {
        "id": "Kp1CtrEikI56"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Extracting the text"
      ],
      "metadata": {
        "id": "oxtoeAqW6crO"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import fitz\n",
        "def extract_text_from_pdf(path):\n",
        "\n",
        "\n",
        "  doc = fitz.open(path)\n",
        "  full_text = \"\"\n",
        "  for page in doc:\n",
        "    text = page.get_text()\n",
        "    if text.strip():\n",
        "      full_text += text + \"\\n\"\n",
        "\n",
        "  return full_text\n",
        "extracted_text = extract_text_from_pdf(\"Fiscal Responsibility Act.pdf\")\n",
        "\n",
        "print(extracted_text[:500])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "c3tXzT3xkh9P",
        "outputId": "98683936-7fc8-467e-b6cc-fc9c58266643"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "PUBLIC LAW 118–5—JUN. 3, 2023 \n",
            "FISCAL RESPONSIBILITY ACT OF 2023 \n",
            "VerDate Sep 11 2014 \n",
            "11:38 Jun 14, 2023\n",
            "Jkt 039139\n",
            "PO 00005\n",
            "Frm 00001\n",
            "Fmt 6579\n",
            "Sfmt 6579\n",
            "E:\\PUBLAW\\PUBL005.118\n",
            "PUBL005\n",
            "whamilton on LAP1Z6H6L3PROD with PUBLAW\n",
            "\n",
            "137 STAT. 10 \n",
            "PUBLIC LAW 118–5—JUN. 3, 2023 \n",
            "Public Law 118–5 \n",
            "118th Congress \n",
            "An Act \n",
            "To provide for a responsible increase to the debt ceiling. \n",
            "Be it enacted by the Senate and House of Representatives of \n",
            "the United States of America in Congress assembled, \n",
            "SECTION 1. SH\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Chunk The Text"
      ],
      "metadata": {
        "id": "GL2qKFqf6l9w"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from langchain_text_splitters import CharacterTextSplitter\n",
        "\n",
        "\n",
        "def split_text_into_chunks(text,chunk_size= 1000,chunk_overlap= 200):\n",
        "\n",
        "  splitter = CharacterTextSplitter(\n",
        "      chunk_size = chunk_size,\n",
        "      chunk_overlap = chunk_overlap,\n",
        "      separator =\"\\n\",\n",
        "      length_function = len\n",
        "\n",
        "\n",
        "\n",
        "  )\n",
        "  chunks = splitter.split_text(text)\n",
        "  return chunks\n",
        "\n",
        "\n",
        "chunks = split_text_into_chunks(extracted_text)\n",
        "\n",
        "print(f\"Length of the chunks:\",{len(chunks)})\n",
        "print(chunks[0][:10])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZVXprXQJmKH8",
        "outputId": "fdb0b2ba-512d-4fd9-c2fb-1b01fbc4e84e"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Length of the chunks: {150}\n",
            "PUBLIC LAW\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Applying Tokenization and Embedding and Developing Vectors"
      ],
      "metadata": {
        "id": "Jr-r-pL56kc-"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from langchain_google_genai.embeddings import GoogleGenerativeAIEmbeddings #Embedding along with the tokenization\n",
        "from langchain_community.vectorstores import Chroma # to vectors\n",
        "\n",
        "embeddings = GoogleGenerativeAIEmbeddings(\n",
        "    model=\"models/embedding-001\",\n",
        "    google_api_key=\"AIzaSyARKBxA-n1lDv2Sfhe2gMlGY_eqe1cdiWI\"  # Replace with your actual key\n",
        ")\n",
        "\n"
      ],
      "metadata": {
        "id": "RwXRAx6YoU42"
      },
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "vectorstore = Chroma.from_texts(chunks, embedding=embeddings, collection_name=\"regulation_chunks\")\n"
      ],
      "metadata": {
        "id": "r_6MQuDFq29E"
      },
      "execution_count": 7,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Calling The LLM gemini-2.5-flash"
      ],
      "metadata": {
        "id": "aTCtpE1X64Ne"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import getpass\n",
        "import os\n",
        "\n",
        "if \"GOOGLE_API_KEY\" not in os.environ:\n",
        "    os.environ[\"GOOGLE_API_KEY\"] = getpass.getpass(\"Enter your Google AI API key: \")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "pIfTLxd_rkrW",
        "outputId": "53a1a4a5-2644-4372-ca7a-b257f9538018"
      },
      "execution_count": 8,
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Enter your Google AI API key: ··········\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from langchain_google_genai import ChatGoogleGenerativeAI\n",
        "\n",
        "llm = ChatGoogleGenerativeAI(\n",
        "    model=\"gemini-2.5-flash\",\n",
        "    temperature=0,\n",
        "    max_tokens=None,\n",
        "    timeout=None,\n",
        "    max_retries=2,\n",
        "    # other params...\n",
        ")"
      ],
      "metadata": {
        "id": "Da85cDYTrs5R"
      },
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Response from the LLM"
      ],
      "metadata": {
        "id": "qU8A1oUa7DQh"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "response = llm.invoke(\"What are the key points mentioned in the Fiscal Responsibility Act?\")\n",
        "print(response.content[:200])\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MChHx8sFs9yc",
        "outputId": "a595c5f9-3b69-46c9-c09e-095f8864999c"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "The term \"Fiscal Responsibility Act\" generally refers to legislation enacted by governments to ensure fiscal discipline, reduce public debt, and promote long-term macroeconomic stability. While specif\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Response from the LLM with RAG"
      ],
      "metadata": {
        "id": "GlKBnbfa7Cku"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "retriever = vectorstore.as_retriever()\n",
        "from langchain.chains import RetrievalQA\n",
        "\n",
        "qa_chain = RetrievalQA.from_chain_type(\n",
        "    llm=llm,\n",
        "    retriever=retriever,\n",
        "    return_source_documents=True\n",
        ")\n",
        "\n"
      ],
      "metadata": {
        "id": "of8IFtgPtc8b"
      },
      "execution_count": 11,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "query = \"What are the key points mentioned in the Fiscal Responsibility Act?\"\n",
        "response = qa_chain.invoke(query)\n",
        "\n",
        "# Final answer\n",
        "print(\"Answer:\\n\", response['result'])\n",
        "\n",
        "# If you want to also see which documents were used:\n",
        "print(\"\\nRetrieved Sources:\")\n",
        "for doc in response['source_documents']:\n",
        "    print(doc.page_content[:200])  # Show first 200 chars\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "p4_tbotctjVm",
        "outputId": "4e848b1f-08b9-4091-ec06-e38f09bf534f"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Answer:\n",
            " Based on the provided text, the key points mentioned in the Fiscal Responsibility Act of 2023 are:\n",
            "\n",
            "*   **Purpose:** To provide for a responsible increase to the debt ceiling.\n",
            "*   **Limit Federal Spending:** This is a major division of the Act.\n",
            "    *   **Discretionary Spending Limits:** Specifically, it includes sections on discretionary spending limits for the discretionary category.\n",
            "    *   **Special Adjustments:** It also mentions special adjustments for fiscal years 2024 and 2025 related to these limits.\n",
            "*   **Rescission of Unobligated Funds:** Numerous sections are dedicated to the rescission of unobligated funds.\n",
            "*   **Definition of \"Major Federal Action\":** The Act defines \"major Federal action\" and lists exclusions, such as non-Federal actions with minimal Federal funding or involvement, general revenue sharing funds, and certain loans or financial assistance where Federal agencies lack sufficient control.\n",
            "\n",
            "Retrieved Sources:\n",
            "PUBLIC LAW 118–5—JUN. 3, 2023 \n",
            "FISCAL RESPONSIBILITY ACT OF 2023 \n",
            "VerDate Sep 11 2014 \n",
            "11:38 Jun 14, 2023\n",
            "Jkt 039139\n",
            "PO 00005\n",
            "Frm 00001\n",
            "Fmt 6579\n",
            "Sfmt 6579\n",
            "E:\\PUBLAW\\PUBL005.118\n",
            "PUBL005\n",
            "whamilton on LA\n",
            "section 107(a)(1). \n",
            "‘‘(10) MAJOR FEDERAL ACTION.— \n",
            "‘‘(A) IN\n",
            "GENERAL.—The term ‘major Federal action’ \n",
            "means an action that the agency carrying out such action \n",
            "determines is subject to substantial Fed\n",
            "Sec. 48. Rescission of unobligated funds. \n",
            "Sec. 49. Rescission of unobligated funds. \n",
            "Sec. 50. Rescission of unobligated funds. \n",
            "Sec. 51. Rescission of unobligated funds. \n",
            "Sec. 52. Rescission of unobl\n",
            "Sec. 29. Rescission of unobligated funds. \n",
            "Sec. 30. Rescission of unobligated funds. \n",
            "Sec. 31. Rescission of unobligated funds. \n",
            "Sec. 32. Rescission of unobligated funds. \n",
            "Sec. 33. Rescission of unobl\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "query = \"What are the key points mentioned in the Fiscal Responsibility Act?\"\n",
        "response = qa_chain.invoke(query)\n",
        "\n",
        "# --- Clean Answer Output ---\n",
        "print(\"Answer: Key Points from the Fiscal Responsibility Act\\n\")\n",
        "\n",
        "# Print each line as a bullet point\n",
        "for line in response['result'].split('\\n'):\n",
        "    line = line.strip()\n",
        "    if line:\n",
        "        print(f\"- {line}\")\n",
        "\n",
        "# --- Source Documents ---\n",
        "print(\"\\nRetrieved Source Documents:\\n\")\n",
        "for i, doc in enumerate(response['source_documents'], start=1):\n",
        "    snippet = doc.page_content.strip().replace('\\n', ' ')\n",
        "    print(f\"{i}. {snippet[:300]}...\\n\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zeBZmgdj2VDW",
        "outputId": "659faf49-d3b0-485d-ce98-baf4b06bb3c7"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Answer: Key Points from the Fiscal Responsibility Act\n",
            "\n",
            "- Based on the provided text, the key points mentioned in the Fiscal Responsibility Act of 2023 are:\n",
            "- *   **Purpose:** To provide for a responsible increase to the debt ceiling.\n",
            "- *   **Limit Federal Spending:** This is a major division of the Act.\n",
            "- *   **Discretionary Spending Limits:** Specifically, it includes sections on discretionary spending limits for the discretionary category.\n",
            "- *   **Special Adjustments:** It also mentions special adjustments for fiscal years 2024 and 2025 related to these limits.\n",
            "- *   **Rescission of Unobligated Funds:** Numerous sections are dedicated to the rescission of unobligated funds.\n",
            "- *   **Definition of \"Major Federal Action\":** The Act defines \"major Federal action\" and lists exclusions, such as non-Federal actions with minimal Federal funding or involvement, general revenue sharing funds, and certain loans or financial assistance where Federal agencies lack sufficient control.\n",
            "\n",
            "Retrieved Source Documents:\n",
            "\n",
            "1. PUBLIC LAW 118–5—JUN. 3, 2023  FISCAL RESPONSIBILITY ACT OF 2023  VerDate Sep 11 2014  11:38 Jun 14, 2023 Jkt 039139 PO 00005 Frm 00001 Fmt 6579 Sfmt 6579 E:\\PUBLAW\\PUBL005.118 PUBL005 whamilton on LAP1Z6H6L3PROD with PUBLAW 137 STAT. 10  PUBLIC LAW 118–5—JUN. 3, 2023  Public Law 118–5  118th Congre...\n",
            "\n",
            "2. section 107(a)(1).  ‘‘(10) MAJOR FEDERAL ACTION.—  ‘‘(A) IN GENERAL.—The term ‘major Federal action’  means an action that the agency carrying out such action  determines is subject to substantial Federal control and  responsibility.  ‘‘(B) EXCLUSION.—The term ‘major Federal action’ does  not includ...\n",
            "\n",
            "3. Sec. 48. Rescission of unobligated funds.  Sec. 49. Rescission of unobligated funds.  Sec. 50. Rescission of unobligated funds.  Sec. 51. Rescission of unobligated funds.  Sec. 52. Rescission of unobligated funds.  Sec. 53. Rescission of unobligated funds.  Sec. 54. Rescission of unobligated funds. ...\n",
            "\n",
            "4. Sec. 29. Rescission of unobligated funds.  Sec. 30. Rescission of unobligated funds.  Sec. 31. Rescission of unobligated funds.  Sec. 32. Rescission of unobligated funds.  Sec. 33. Rescission of unobligated funds.  Sec. 34. Rescission of unobligated funds.  Sec. 35. Rescission of unobligated funds. ...\n",
            "\n"
          ]
        }
      ]
    }
  ]
}
